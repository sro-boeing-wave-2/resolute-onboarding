// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnBoarding.Models;

namespace OnBoarding.Migrations
{
    [DbContext(typeof(OnBoardingContext))]
    [Migration("20180911091230_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OnBoarding.Models.Agent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<long?>("DepartmentId");

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<long?>("OrganizationId");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("ProfileImgUrl");

                    b.Property<long>("UpdatedBy");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Agent");
                });

            modelBuilder.Entity("OnBoarding.Models.Department", b =>
                {
                    b.Property<long>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("DepartmentName");

                    b.Property<long>("UpdatedBy");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("DepartmentId");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("OnBoarding.Models.EndUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<long?>("OrganizationId");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("ProfileImgUrl");

                    b.Property<long>("UpdatedBy");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("EndUser");
                });

            modelBuilder.Entity("OnBoarding.Models.Organisation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("Email");

                    b.Property<string>("LogoUrl");

                    b.Property<string>("OrganisationDisplayName");

                    b.Property<string>("OrganisationName");

                    b.Property<string>("Password");

                    b.Property<long>("UpdatedBy");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("Id");

                    b.ToTable("Organisation");
                });

            modelBuilder.Entity("OnBoarding.Models.UserSocialId", b =>
                {
                    b.Property<long>("SocialId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<long?>("EndUserId");

                    b.Property<string>("Identifier");

                    b.Property<string>("Source");

                    b.Property<long>("UpdatedBy");

                    b.Property<DateTime>("UpdatedOn");

                    b.HasKey("SocialId");

                    b.HasIndex("EndUserId");

                    b.ToTable("UserSocialId");
                });

            modelBuilder.Entity("OnBoarding.Models.Agent", b =>
                {
                    b.HasOne("OnBoarding.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("OnBoarding.Models.Organisation", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId");
                });

            modelBuilder.Entity("OnBoarding.Models.EndUser", b =>
                {
                    b.HasOne("OnBoarding.Models.Organisation", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId");
                });

            modelBuilder.Entity("OnBoarding.Models.UserSocialId", b =>
                {
                    b.HasOne("OnBoarding.Models.EndUser")
                        .WithMany("SocialId")
                        .HasForeignKey("EndUserId");
                });
#pragma warning restore 612, 618
        }
    }
}
